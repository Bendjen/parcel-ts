{"version":3,"sources":["project/priceCalendar/text/index.ts"],"names":["Object","defineProperty","__webpack_exports__","value","readMeText","javaScriptText","title","text"],"mappings":"oDAAAA,OAAAC,eAAAC,EAAA,cAAAC,OAAA,IAyPeD,EAAA,SAAEE,WAxPjB,icAwP6BC,iBA9OzBC,MAAM,6CACNC,KAAK,43PAqNPD,MAAM,mDACNC,KAAK,8JAULD,MAAM,2BACNC,KAAK","file":"static/js/28.17fd9b20.chunk.js","sourcesContent":["const readMeText =\r\n`  关键点如下：<br/>\r\n  1、 计算出日历数组（展示月份的日期数据）<br/>\r\n  2、 遍历日历数组渲染出日历界面<br/>\r\n  3、 异步请求价格数据，混入每日的价格、是否休息日等扩展信息<br/>\r\n\r\n`;\r\n\r\n\r\nconst javaScriptText = [\r\n  {\r\n    title:'日历算法与渲染',\r\n    text:`\r\nimport { Icon, Input, Spin } from 'antd';\r\nimport moment from 'moment';\r\nimport React from \"react\";\r\nimport style from \"./index.scss\"\r\nimport REST from \"./rest\"\r\n\r\nclass PriceCalendar extends React.Component<{}, any> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.lastMonth = this.lastMonth.bind(this)\r\n    this.nextMonth = this.nextMonth.bind(this)\r\n    this.lastYear = this.lastYear.bind(this)\r\n    this.nextYear = this.nextYear.bind(this)\r\n    this.setPickDate = this.setPickDate.bind(this)\r\n    this.state = {\r\n      calendarArray: [],      // 日历数组\r\n      pickDate: '',           // 当前选中的日期\r\n      showMonth: '',          // 当前展示的月份\r\n      loading: false          // 是否正在查询价格\r\n    };\r\n  }\r\n  public render() {\r\n    return (\r\n      <div data-flex='dir:top main:center cross:center'>\r\n        <Input placeholder=\"点击选择日期\" style={{ width: 150 }} value={moment(this.state.pickDate).format('YYYY-MM-DD')} readOnly={true} />\r\n        {true ?\r\n          this.calendarRender() :\r\n          ''\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 初始化当前月份日历\r\n\r\n  public componentDidMount() {\r\n    this.setState({\r\n      showMonth: moment(),\r\n      pickDate: moment()\r\n    })\r\n    this.changeMonth()\r\n  }\r\n\r\n  // 异步查询月份日历价格，本地随机模拟\r\n\r\n  private fetchPrice(date: any) {\r\n    const firstDay = moment(date).startOf('month')\r\n    const lastDay = moment(date).endOf('month')\r\n    const totalvalidNum = moment(lastDay).dayOfYear() - moment(firstDay).dayOfYear() + 1\r\n    const res = {}\r\n    this.setState({ loading: true })\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        for (let i = 0; i < totalvalidNum; i++) {\r\n          res[\\`\\${moment(firstDay).add(i, 'day').format('YYYY-MM-DD')}\\`] = Math.floor(Math.random() * 50)\r\n        }\r\n        this.setState({ loading: false })\r\n        resolve(res)\r\n      }, 1000)\r\n    })\r\n  }\r\n\r\n  // 变更月份时，重新获取价格与计算日历数组\r\n\r\n  private async changeMonth(date: any = moment()) {\r\n    const priceList = await this.fetchPrice(date)\r\n    const firstDay = moment(date).startOf('month')\r\n    const lastDay = moment(date).endOf('month')\r\n    const totalvalidNum = moment(lastDay).dayOfYear() - moment(firstDay).dayOfYear() + 1\r\n    const startWeekDay = moment(firstDay).day()\r\n    const endWeekDay = moment(lastDay).day()\r\n    const firstLineExtraNum = startWeekDay === 0 ? 6 : (startWeekDay === 1 ? 7 : startWeekDay - 1)\r\n    const lastLineExtraNum = 7 - endWeekDay\r\n    const totalCellNum = totalvalidNum + firstLineExtraNum + lastLineExtraNum\r\n    const calendarArray = [];\r\n    for (let i = 0; i < totalCellNum; i++) {\r\n      if (i < firstLineExtraNum) {\r\n        const cellDate: any = moment(firstDay).subtract(startWeekDay === 0 ? (7 - i - 1) : (startWeekDay === 1 ? (7 - i) : (startWeekDay - i - 1)), 'days')\r\n        const cellPrice: number | string = '￥' + priceList[cellDate.format('YYYY-MM-DD')]\r\n        calendarArray.push({\r\n          valid: false,\r\n          date: cellDate,\r\n          price: cellPrice,\r\n          isFestival: REST.includes(moment(cellDate).format('YYYY-MM-DD'))\r\n        })\r\n      } else if (i > totalCellNum - lastLineExtraNum - 1 && i < totalCellNum) {\r\n        const cellDate: any = moment(lastDay).add(lastLineExtraNum - (totalCellNum - i) + 1, 'days')\r\n        const cellPrice: number | string = '￥' + priceList[cellDate.format('YYYY-MM-DD')]\r\n        calendarArray.push({\r\n          valid: false,\r\n          date: cellDate,\r\n          price: cellPrice,\r\n          isFestival: REST.includes(moment(cellDate).format('YYYY-MM-DD'))\r\n        })\r\n      } else {\r\n        const cellDate: any = moment(firstDay).add(i - firstLineExtraNum, 'days')\r\n        const cellPrice: number | string = '￥' + priceList[cellDate.format('YYYY-MM-DD')]\r\n        calendarArray.push({\r\n          valid: true,\r\n          date: moment(firstDay).add(i - firstLineExtraNum, 'days'),\r\n          price: cellPrice,\r\n          isFestival: REST.includes(moment(cellDate).format('YYYY-MM-DD')),\r\n        })\r\n      }\r\n    }\r\n    this.setState({ calendarArray })\r\n    this.calendarRender()\r\n  }\r\n\r\n  // 遍历日历数组渲染日历视图\r\n\r\n  private calendarRender() {\r\n    const lineNum = Math.ceil(this.state.calendarArray.length / 7)\r\n    return (<div className={style.calendarContainer} >\r\n      {\r\n        this.state.loading ?\r\n          <div className={style.loading} data-flex='main:center cross:center'> <Spin /></div> :\r\n          null\r\n      }\r\n\r\n      <div data-flex='main:justify cross:center'>\r\n        <div className={style.iconLeft} data-flex='cross:center'>\r\n          <Icon type=\"double-left\" onClick={this.lastYear} />\r\n          <Icon type=\"left\" onClick={this.lastMonth} />\r\n        </div>\r\n        <div className={style.curMonth}>{moment(this.state.showMonth).format('YYYY年MM月')}</div>\r\n        <div className={style.iconRight} data-flex='cross:center'>\r\n          <Icon type=\"right\" onClick={this.nextMonth} />\r\n          <Icon type=\"double-right\" onClick={this.nextYear} />\r\n        </div>\r\n      </div>\r\n      <div data-flex='dir:top main:center cross:center'>\r\n        <div className={style.calendarLine} data-flex='main:justify cross:center'>\r\n          <p>一</p>\r\n          <p>二</p>\r\n          <p>三</p>\r\n          <p>四</p>\r\n          <p>五</p>\r\n          <p>六</p>\r\n          <p>日</p>\r\n        </div>\r\n        {\r\n          new Array(lineNum).fill(null).map((item, index) => {\r\n            return (<div key={index} className={style.calendarLine} data-flex='main:justify cross:center'>\r\n              {new Array(7).fill(null).map((v, i) => {\r\n                const targetDate = this.state.calendarArray[i + index * 7];\r\n                return (<p key={i} className={moment(this.state.pickDate).startOf('day').isSame(moment(targetDate.date).startOf('day')) ? style['pick-date'] : (targetDate.valid ? null : style['disabled-date'])}\r\n                  data-flex='dir:top main:center cross:center' onClick={this.setPickDate.bind(this, i + index * 7)}>\r\n                  <span>{moment(targetDate.date).format(\"DD\")}</span>\r\n                  {targetDate.valid ?\r\n                    <span className={style.price}>{targetDate.price}</span> :\r\n                    ''\r\n                  }\r\n                  {targetDate.isFestival ?\r\n                    <span className={style.rest}>休</span> :\r\n                    ''\r\n                  }\r\n                </p>)\r\n              })}\r\n            </div>)\r\n          })\r\n        }\r\n\r\n      </div>\r\n    </div>)\r\n  }\r\n\r\n  // 选择某个日期，设置当前日期\r\n\r\n  private setPickDate(index: number) {\r\n    this.setState({\r\n      pickDate: this.state.calendarArray[index].date\r\n    })\r\n  }\r\n\r\n  // 点击上个月\r\n\r\n  private lastMonth() {\r\n    const lastMonth = moment(this.state.showMonth).subtract(1, 'month');\r\n    this.setState({ showMonth: lastMonth })\r\n    this.changeMonth(lastMonth)\r\n  }\r\n\r\n  // 点击下个月\r\n\r\n  private nextMonth() {\r\n    const nextMonth = moment(this.state.showMonth).add(1, 'month');\r\n    this.setState({ showMonth: nextMonth })\r\n    this.changeMonth(nextMonth)\r\n  }\r\n\r\n  // 点击上一年\r\n\r\n  private lastYear() {\r\n    const lastYear = moment(this.state.showMonth).subtract(1, 'year');\r\n    this.setState({ showMonth: lastYear })\r\n    this.changeMonth(lastYear)\r\n  }\r\n\r\n  // 点击下一年\r\n\r\n  private nextYear() {\r\n    const nextYear = moment(this.state.showMonth).add(1, 'year');\r\n    this.setState({ showMonth: nextYear })\r\n    this.changeMonth(nextYear)\r\n  }\r\n}\r\n\r\nexport default PriceCalendar;\r\n\r\n`\r\n},{\r\n  title:'模拟价格数据格式',\r\n  text:`// fetchPrice\r\n[\r\n    \"2019-03-01\" : 26,\r\n    \"2019-03-02\" : 12,\r\n    \"2019-03-03\" : 3,\r\n    \"2019-03-04\" : 76,\r\n    \"2019-03-05\" : 18,\r\n          ...\r\n]`},\r\n{\r\n  title:'假日数据',\r\n  text:`// rest.ts\r\n[\r\n    \"2019-01-01\",\r\n    \"2019-02-04\",\r\n    \"2019-02-05\",\r\n    \"2019-02-06\",\r\n    \"2019-02-07\",\r\n    \"2019-02-08\",\r\n        ...\r\n]`}\r\n];\r\n\r\nexport default { readMeText, javaScriptText };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/project/priceCalendar/text/index.ts"],"sourceRoot":""}
webpackJsonp([29],{1404:function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});n.default={readMeText:"  \u5173\u952e\u70b9\u5982\u4e0b\uff1a<br/>\n  1\u3001 \u8ba1\u7b97\u51fa\u65e5\u5386\u6570\u7ec4\uff08\u5c55\u793a\u6708\u4efd\u7684\u65e5\u671f\u6570\u636e\uff09<br/>\n  2\u3001 \u904d\u5386\u65e5\u5386\u6570\u7ec4\u6e32\u67d3\u51fa\u65e5\u5386\u754c\u9762<br/>\n  3\u3001 \u5f02\u6b65\u8bf7\u6c42\u4ef7\u683c\u6570\u636e\uff0c\u6df7\u5165\u6bcf\u65e5\u7684\u4ef7\u683c\u3001\u662f\u5426\u4f11\u606f\u65e5\u7b49\u6269\u5c55\u4fe1\u606f<br/>\n\n",javaScriptText:[{title:"\u65e5\u5386\u7b97\u6cd5\u4e0e\u6e32\u67d3",text:"\nimport { Icon, Input, Spin } from 'antd';\nimport moment from 'moment';\nimport React from \"react\";\nimport style from \"./index.scss\"\nimport REST from \"./rest\"\n\nclass PriceCalendar extends React.Component<{}, any> {\n  constructor(props: {}) {\n    super(props);\n    this.lastMonth = this.lastMonth.bind(this)\n    this.nextMonth = this.nextMonth.bind(this)\n    this.lastYear = this.lastYear.bind(this)\n    this.nextYear = this.nextYear.bind(this)\n    this.setPickDate = this.setPickDate.bind(this)\n    this.state = {\n      calendarArray: [],      // \u65e5\u5386\u6570\u7ec4\n      pickDate: '',           // \u5f53\u524d\u9009\u4e2d\u7684\u65e5\u671f\n      showMonth: '',          // \u5f53\u524d\u5c55\u793a\u7684\u6708\u4efd\n      loading: false          // \u662f\u5426\u6b63\u5728\u67e5\u8be2\u4ef7\u683c\n    };\n  }\n  public render() {\n    return (\n      <div data-flex='dir:top main:center cross:center'>\n        <Input placeholder=\"\u70b9\u51fb\u9009\u62e9\u65e5\u671f\" style={{ width: 150 }} value={moment(this.state.pickDate).format('YYYY-MM-DD')} readOnly={true} />\n        {true ?\n          this.calendarRender() :\n          ''\n        }\n      </div>\n    );\n  }\n\n  // \u521d\u59cb\u5316\u5f53\u524d\u6708\u4efd\u65e5\u5386\n\n  public componentDidMount() {\n    this.setState({\n      showMonth: moment(),\n      pickDate: moment()\n    })\n    this.changeMonth()\n  }\n\n  // \u5f02\u6b65\u67e5\u8be2\u6708\u4efd\u65e5\u5386\u4ef7\u683c\uff0c\u672c\u5730\u968f\u673a\u6a21\u62df\n\n  private fetchPrice(date: any) {\n    const firstDay = moment(date).startOf('month')\n    const lastDay = moment(date).endOf('month')\n    const totalvalidNum = moment(lastDay).dayOfYear() - moment(firstDay).dayOfYear() + 1\n    const res = {}\n    this.setState({ loading: true })\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        for (let i = 0; i < totalvalidNum; i++) {\n          res[`${moment(firstDay).add(i, 'day').format('YYYY-MM-DD')}`] = Math.floor(Math.random() * 50)\n        }\n        this.setState({ loading: false })\n        resolve(res)\n      }, 1000)\n    })\n  }\n\n  // \u53d8\u66f4\u6708\u4efd\u65f6\uff0c\u91cd\u65b0\u83b7\u53d6\u4ef7\u683c\u4e0e\u8ba1\u7b97\u65e5\u5386\u6570\u7ec4\n\n  private async changeMonth(date: any = moment()) {\n    const priceList = await this.fetchPrice(date)\n    const firstDay = moment(date).startOf('month')\n    const lastDay = moment(date).endOf('month')\n    const totalvalidNum = moment(lastDay).dayOfYear() - moment(firstDay).dayOfYear() + 1\n    const startWeekDay = moment(firstDay).day()\n    const endWeekDay = moment(lastDay).day()\n    const firstLineExtraNum = startWeekDay === 0 ? 6 : (startWeekDay === 1 ? 7 : startWeekDay - 1)\n    const lastLineExtraNum = 7 - endWeekDay\n    const totalCellNum = totalvalidNum + firstLineExtraNum + lastLineExtraNum\n    const calendarArray = [];\n    for (let i = 0; i < totalCellNum; i++) {\n      if (i < firstLineExtraNum) {\n        const cellDate: any = moment(firstDay).subtract(startWeekDay === 0 ? (7 - i - 1) : (startWeekDay === 1 ? (7 - i) : (startWeekDay - i - 1)), 'days')\n        const cellPrice: number | string = '\uffe5' + priceList[cellDate.format('YYYY-MM-DD')]\n        calendarArray.push({\n          valid: false,\n          date: cellDate,\n          price: cellPrice,\n          isFestival: REST.includes(moment(cellDate).format('YYYY-MM-DD'))\n        })\n      } else if (i > totalCellNum - lastLineExtraNum - 1 && i < totalCellNum) {\n        const cellDate: any = moment(lastDay).add(lastLineExtraNum - (totalCellNum - i) + 1, 'days')\n        const cellPrice: number | string = '\uffe5' + priceList[cellDate.format('YYYY-MM-DD')]\n        calendarArray.push({\n          valid: false,\n          date: cellDate,\n          price: cellPrice,\n          isFestival: REST.includes(moment(cellDate).format('YYYY-MM-DD'))\n        })\n      } else {\n        const cellDate: any = moment(firstDay).add(i - firstLineExtraNum, 'days')\n        const cellPrice: number | string = '\uffe5' + priceList[cellDate.format('YYYY-MM-DD')]\n        calendarArray.push({\n          valid: true,\n          date: moment(firstDay).add(i - firstLineExtraNum, 'days'),\n          price: cellPrice,\n          isFestival: REST.includes(moment(cellDate).format('YYYY-MM-DD')),\n        })\n      }\n    }\n    this.setState({ calendarArray })\n    this.calendarRender()\n  }\n\n  // \u904d\u5386\u65e5\u5386\u6570\u7ec4\u6e32\u67d3\u65e5\u5386\u89c6\u56fe\n\n  private calendarRender() {\n    const lineNum = Math.ceil(this.state.calendarArray.length / 7)\n    return (<div className={style.calendarContainer} >\n      {\n        this.state.loading ?\n          <div className={style.loading} data-flex='main:center cross:center'> <Spin /></div> :\n          null\n      }\n\n      <div data-flex='main:justify cross:center'>\n        <div className={style.iconLeft} data-flex='cross:center'>\n          <Icon type=\"double-left\" onClick={this.lastYear} />\n          <Icon type=\"left\" onClick={this.lastMonth} />\n        </div>\n        <div className={style.curMonth}>{moment(this.state.showMonth).format('YYYY\u5e74MM\u6708')}</div>\n        <div className={style.iconRight} data-flex='cross:center'>\n          <Icon type=\"right\" onClick={this.nextMonth} />\n          <Icon type=\"double-right\" onClick={this.nextYear} />\n        </div>\n      </div>\n      <div data-flex='dir:top main:center cross:center'>\n        <div className={style.calendarLine} data-flex='main:justify cross:center'>\n          <p>\u4e00</p>\n          <p>\u4e8c</p>\n          <p>\u4e09</p>\n          <p>\u56db</p>\n          <p>\u4e94</p>\n          <p>\u516d</p>\n          <p>\u65e5</p>\n        </div>\n        {\n          new Array(lineNum).fill(null).map((item, index) => {\n            return (<div key={index} className={style.calendarLine} data-flex='main:justify cross:center'>\n              {new Array(7).fill(null).map((v, i) => {\n                const targetDate = this.state.calendarArray[i + index * 7];\n                return (<p key={i} className={moment(this.state.pickDate).startOf('day').isSame(moment(targetDate.date).startOf('day')) ? style['pick-date'] : (targetDate.valid ? null : style['disabled-date'])}\n                  data-flex='dir:top main:center cross:center' onClick={this.setPickDate.bind(this, i + index * 7)}>\n                  <span>{moment(targetDate.date).format(\"DD\")}</span>\n                  {targetDate.valid ?\n                    <span className={style.price}>{targetDate.price}</span> :\n                    ''\n                  }\n                  {targetDate.isFestival ?\n                    <span className={style.rest}>\u4f11</span> :\n                    ''\n                  }\n                </p>)\n              })}\n            </div>)\n          })\n        }\n\n      </div>\n    </div>)\n  }\n\n  // \u9009\u62e9\u67d0\u4e2a\u65e5\u671f\uff0c\u8bbe\u7f6e\u5f53\u524d\u65e5\u671f\n\n  private setPickDate(index: number) {\n    this.setState({\n      pickDate: this.state.calendarArray[index].date\n    })\n  }\n\n  // \u70b9\u51fb\u4e0a\u4e2a\u6708\n\n  private lastMonth() {\n    const lastMonth = moment(this.state.showMonth).subtract(1, 'month');\n    this.setState({ showMonth: lastMonth })\n    this.changeMonth(lastMonth)\n  }\n\n  // \u70b9\u51fb\u4e0b\u4e2a\u6708\n\n  private nextMonth() {\n    const nextMonth = moment(this.state.showMonth).add(1, 'month');\n    this.setState({ showMonth: nextMonth })\n    this.changeMonth(nextMonth)\n  }\n\n  // \u70b9\u51fb\u4e0a\u4e00\u5e74\n\n  private lastYear() {\n    const lastYear = moment(this.state.showMonth).subtract(1, 'year');\n    this.setState({ showMonth: lastYear })\n    this.changeMonth(lastYear)\n  }\n\n  // \u70b9\u51fb\u4e0b\u4e00\u5e74\n\n  private nextYear() {\n    const nextYear = moment(this.state.showMonth).add(1, 'year');\n    this.setState({ showMonth: nextYear })\n    this.changeMonth(nextYear)\n  }\n}\n\nexport default PriceCalendar;\n\n"},{title:"\u6a21\u62df\u4ef7\u683c\u6570\u636e\u683c\u5f0f",text:'// fetchPrice\n[\n    "2019-03-01" : 26,\n    "2019-03-02" : 12,\n    "2019-03-03" : 3,\n    "2019-03-04" : 76,\n    "2019-03-05" : 18,\n          ...\n]'},{title:"\u5047\u65e5\u6570\u636e",text:'// rest.ts\n[\n    "2019-01-01",\n    "2019-02-04",\n    "2019-02-05",\n    "2019-02-06",\n    "2019-02-07",\n    "2019-02-08",\n        ...\n]'}]}}});
//# sourceMappingURL=29.817ba05f.chunk.js.map
webpackJsonp([49],{1386:function(t,s,e){"use strict";Object.defineProperty(s,"__esModule",{value:!0});s.default={htmlText:"render() {\n  const successNum = this.state.flow.tasks.filter(item => item.status === 'success').length\n  return (\n    <div>\n      <Button type=\"primary\" icon=\"caret-right\" onClick={this.executeTask} disabled={!this.state.taskReady}>\u6267\u884c\u4efb\u52a1</Button>\n      <Modal visible={this.state.visible} maskClosable={false} footer={null} width={800} closable={false}>\n        <div className={style.modalContainer} data-flex='dir:top main:center cross:center'>\n          {/* \u6807\u9898 */}\n          {successNum === 7 ?\n            <p className={`${style.modalTitle}  ${style.green}`} data-flex='cross:center'>  <Icon type=\"check-circle\" /> \u4efb\u52a1\u5df2\u5b8c\u6210 </p>\n            : <p className={`${style.modalTitle} && ${style.blue}`} data-flex='cross:center'>  <Icon type=\"loading\" /> \u4efb\u52a1\u8fdb\u884c\u4e2d </p>\n          }\n          {/* \u8bf4\u660e */}\n          <p data-flex='main:start cross:center' style={{ width: '100%' }} className={style.explain}>\n            \u5f53\u524d\u4efb\u52a1\u5171 <span className={style.blue}>7</span>\u9879\u6d41\u7a0b\uff0c\u5f53\u524d\u6b63\u5728\u8fdb\u884c\u7b2c <span className={style.green}>{successNum}</span>\u9879\n          </p>\n          {/* \u8fdb\u5ea6\u6761 */}\n          <Progress percent={Math.ceil((successNum / 7) * 100)} strokeWidth={20} status={successNum === 7 ? \"success\" : \"active\"} strokeColor={successNum === 7 ? '#67C23A' : '#1890ff'} />\n          {/* \u4efb\u52a1\u8be6\u60c5\u76d2\u5b50 */}\n          <div className={style.detailBox}>\n            {this.state.flow.tasks.map(item => {\n              return (<div key={item.text}>\n                {item.status === 'waitting' ? <p className={style.gray} data-flex='main:justify cross:center'>\n                  <span>{item.text}</span>\n                  <span>\u7b49\u5f85\u4e2d</span>\n                </p> : null}\n                {item.status === 'doing' ? <p className={style.blue} data-flex='main:justify cross:center'>\n                  <span>{item.text}</span>\n                  <span><Icon type=\"loading\" />\u8fdb\u884c\u4e2d</span>\n                </p> : null}\n                {item.status === 'success' ? <p className={style.green} data-flex='main:justify cross:center'>\n                  <span>{item.text}</span>\n                  <span><Icon type=\"check\" />\u5df2\u5b8c\u6210</span>\n                </p> : null}\n              </div>)\n            })}\n          </div>\n          {/* \u6309\u94ae */}\n          <div className={style.btnConatiner} data-flex='dir:left main:right cross:center'>\n            <Button type=\"primary\" onClick={this.handleConfirm} disabled={successNum !== 7}>\u786e\u8ba4</Button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );",readMeText:"  \u672c\u4f8b\u9700\u8981\u8fdb\u884c\u7684\u6d41\u7a0b\u5982\u4e0b\uff1a<br/>\n  1\u3001 \u8bf7\u6c42\u63a5\u53e3\uff0c\u901a\u8fc7\u5408\u5e76\u8ba2\u5355\u53f7\u67e5\u8be2\u51fa\u5408\u5e76\u8ba2\u5355\u4e0b\u7684\u6240\u6709\u5b50\u5355\u6570\u636e<br/>\n  2\u3001 \u8fc7\u6ee4\u6389\u4e0b\u4e0d\u9700\u8981\u6253\u5370\u7684\u5b50\u5355<br/>\n  3\u3001 \u8bf7\u6c42\u63a5\u53e3\uff0c\u67e5\u8be2\u6bcf\u4e2a\u5b50\u5355\u5bf9\u5e94\u7684\u5404\u81ea\u6253\u5370\u6a21\u677f<br/>\n  4\u3001 \u8bf7\u6c42\u63a5\u53e3\uff0c\u8bf7\u6c42\u63a5\u53e3\u53d8\u66f4\u6bcf\u4e2a\u5b50\u5355\u7684\u6253\u5370\u72b6\u6001<br/>\n  5\u3001 \u62c6\u5206\u6253\u5370\u4efb\u52a1\uff0c\u6839\u636e\u6bcf\u4e2a\u5b50\u5355\u7684\u6253\u5370\u89c4\u5219\uff08\u4e00\u8ba2\u5355\u4e00\u4e2a\u6253\u5370\u4efb\u52a1\u6216\u8005\u6309\u6570\u91cf\u62c6\u5206\u6210n\u4e2a\u6253\u5370\u4efb\u52a1\uff09<br/>\n  6\u3001 \u8bf7\u6c42\u786c\u4ef6\u63a5\u53e3\uff0c\u9001\u5165\u6253\u5370\u5e76\u663e\u793a\u8fdb\u5ea6 \uff08\u8fd9\u4e2a\u63a5\u53e3\u5e94\u8be5\u4e3a\u4e0e\u786c\u4ef6\u8fde\u63a5\u7684\u63a5\u53e3\u800c\u4e0d\u662f\u540e\u7aef\u7684\uff09<br/>\n  7\u3001 \u8bf7\u6c42\u65e5\u5fd7\u63a5\u53e3\uff0c\u4e0a\u62a5\u6253\u5370\u7ed3\u679c<br/>\n  \uff08\u6ce8\u610f\uff1a\u5b9e\u9645\u9879\u76ee\u4e2d\u5e94\u8be5\u8865\u4e0a\u5bf9\u9519\u8bef\u60c5\u51b5\u7684\u5904\u7406\uff0c\u672c\u4f8b\u7559\u767d\uff09<br/>\n",javaScriptText:[{title:"\u63a5\u53e3\u6a21\u62df",text:"// service.ts\n// \u901a\u8fc7\u5408\u5e76\u8ba2\u5355\u53f7\uff08\u5982\uff1aCMB-0015151616\uff09\u67e5\u8be2\u5b50\u5355\n\nexport function fetchOrderInfo(params: { ordernum: string }) {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve({\n        code: 200,\n        data: [\n          { ordernum: '350001', title: '\u793a\u4f8b\u4efb\u52a1A', num: 5, mode: 0 },\n          { ordernum: '350002', title: '\u793a\u4f8b\u4efb\u52a1B', num: 3, mode: 1 },\n          { ordernum: '350003', title: '\u793a\u4f8b\u4efb\u52a1C', num: 4, mode: 2 },\n        ]\n      })\n    }, 1000)\n  })\n}\n\n// \u901a\u8fc7\u5b50\u8ba2\u5355\u53f7\u67e5\u8be2\u5176\u4ed6\u914d\u5957\u6570\u636e\n\nexport function fetchTemplate(params: { ordernum: string }) {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve({\n        code: 200,\n        data: {\n          ordernum: params.ordernum,\n          template: '\br <\u793a\u4f8b\u6a21\u677f/>'\n        }\n      })\n    }, 1000)\n  })\n}\n\n// \u8bf7\u6c42\u63a5\u53e3\u53d8\u66f4\u5b50\u5355\u7684\u6253\u5370\u72b6\u6001\n\nexport function changePrintStatus(params: { ordernum: string }) {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve({\n        code: 200,\n        msg: 'success'\n      })\n    }, 1000)\n  })\n}\n\n// \u8bf7\u6c42\u63a5\u53e3\u4e0a\u62a5\u64cd\u4f5c\u65e5\u5fd7\n\nexport function uploadLog(params: { ordernum: string, status: string }) {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve({\n        code: 200,\n        msg: 'success'\n      })\n    }, 1000)\n  })\n}\n\n// \u6a21\u62df\u8bf7\u6c42\u6253\u5370\u673a\u53d1\u8d77\u6253\u5370\n\nexport function printTicket(params: { ordernum: string, tempalte: string }) {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve({\n        code: 200,\n        msg: 'success'\n      })\n    }, 1000)\n  })\n}\n  "},{title:"State",text:"constructor(props) {\n      super(props);\n      this.executeTask = this.executeTask.bind(this)\n      this.assembleTask = this.assembleTask.bind(this)\n      this.handleConfirm = this.handleConfirm.bind(this)\n      this.state = {\n        combineOrdernum: 'CMB-0071516106',\n        visible: false,\n        taskReady: true,\n        flow: {\n          title: '\u67e5\u8be2\u5408\u5e76\u8ba2\u5355\u53f7\u4e0b\u7684\u8ba2\u5355\u4fe1\u606f',\n          tasks: [\n            { text: '\u67e5\u8be2\u5408\u5e76\u8ba2\u5355\u53f7\uff1aCMB-0071516106', status: 'waitting' },\n            { text: '\u8fc7\u6ee4\u65e0\u9700\u6253\u5370\u7684\u4efb\u52a1', status: 'waitting' },\n            { text: '\u67e5\u8be2\u6bcf\u4e2a\u5b50\u5355\u5bf9\u5e94\u7684\u5404\u81ea\u6253\u5370\u6a21\u677f', status: 'waitting' },\n            { text: '\u8bf7\u6c42\u53d8\u66f4\u6bcf\u4e2a\u5b50\u5355\u7684\u6253\u5370\u72b6\u6001', status: 'waitting' },\n            { text: '\u6839\u636e\u5b50\u5355\u7968\u6570\u62c6\u5206\u51fa\u6253\u5370\u4efb\u52a1\u7684\u6570\u91cf', status: 'waitting' },\n            { text: '\u8bf7\u6c42\u786c\u4ef6\u8bbe\u5907\u8fdb\u884c\u5355\u7968\u6253\u5370', status: 'waitting' },\n            { text: '\u4e0a\u62a5\u672c\u6b21\u4efb\u52a1\u65e5\u5fd7', status: 'waitting' },\n          ]\n        }\n      };\n    }"},{title:"Rx\u4efb\u52a1\u6d41",text:"     \n    // \u6267\u884c\u4efb\u52a1\n    executeTask() {\n      this.setState({ taskReady: false })\n      this.assembleTask().then(data => {\n        this.setState({ taskReady: true })\n        // tslint:disable-next-line:no-console\n        console.log(data)\n      }).catch(err => {\n        this.setState({ taskReady: false })\n        // tslint:disable-next-line:no-console\n        console.log(err)\n      })\n    }\n\n    // \u7ec4\u88c5\u4efb\u52a1\n    assembleTask() {\n      let successTaskList = [];\n      let failTaskList = [];\n      this.setState({ visible: true })\n      return new Promise((resolve, reject) => {\n        of(this.state.combineOrdernum)\n          .pipe(\n  \n            // 1. \u8bf7\u6c42\u63a5\u53e3\uff0c\u901a\u8fc7\u5408\u5e76\u8ba2\u5355\u53f7\u67e5\u8be2\u51fa\u5408\u5e76\u8ba2\u5355\u4e0b\u7684\u6240\u6709\u5b50\u5355\u6570\u636e\n  \n            tap(() => {\n              let tasks = this.state.flow.tasks;\n              tasks[0].status = 'doing'\n              this.setState({ flow: { ...this.state.flow, tasks } })\n            }),\n  \n            switchMapTo(fetchOrderInfo({ ordernum: this.state.combineOrdernum })),\n  \n            switchMap(res => {\n  \n              if (res.code === 200) {\n                const tickets = res.data\n                if (res.data.length === 0) {\n                  throw new Error('\u670d\u52a1\u5668\u6ca1\u6709\u8fd4\u56de\u95e8\u7968\u6253\u5370\u4fe1\u606f')\n                } else {\n                  return from(tickets)\n                }\n              } else {\n                throw new Error(res.msg || '\u67e5\u8be2\u95e8\u7968\u6253\u5370\u4fe1\u606f\u5931\u8d25')\n              }\n            }),\n  \n            tap(() => {\n              let tasks = this.state.flow.tasks;\n              tasks[0].status = 'success'\n              this.setState({ flow: { ...this.state.flow, tasks } })\n            }),\n  \n            // 2.\u8fc7\u6ee4\u6389\u4e0b\u4e0d\u9700\u8981\u6253\u5370\u7684\u5b50\u5355(mode === 0)\n  \n            tap(() => {\n              let tasks = this.state.flow.tasks;\n              tasks[1].status = 'doing'\n              this.setState({ flow: { ...this.state.flow, tasks } })\n            }),\n  \n            filter(ticket => {\n              if (ticket.mode === 0) {\n                failTaskList.push({ ticket: ticket, failText: \"\u65e0\u9700\u6253\u5370\" })\n                return false\n              } else {\n                return true\n              }\n            }),\n  \n            tap(() => {\n              let tasks = this.state.flow.tasks;\n              tasks[1].status = 'success'\n              this.setState({ flow: { ...this.state.flow, tasks } })\n            }),\n  \n            // 3.\u8bf7\u6c42\u63a5\u53e3\uff0c\u67e5\u8be2\u6bcf\u4e2a\u5b50\u5355\u5bf9\u5e94\u7684\u5404\u81ea\u6253\u5370\u6a21\u677f\n  \n            tap(() => {\n              let tasks = this.state.flow.tasks;\n              tasks[2].status = 'doing'\n              this.setState({ flow: { ...this.state.flow, tasks } })\n            }),\n  \n            mergeMap(ticket =>\n              of(ticket).pipe(\n                switchMapTo(fetchTemplate({ ordernum: ticket.ordernum })),\n                filter(res => {\n                  if (!res.code || res.code !== 200) {\n                    failTaskList.push({ ticket: ticket, failText: `\u67e5\u8be2\u6253\u5370\u6a21\u677f\u5931\u8d25\uff1a${res.msg || res}` })\n                    return false\n                  } else {\n                    return true\n                  }\n                }),\n                map(res => {\n                  return { ticket: ticket, template: res.data.template }\n                })\n              )\n            ),\n  \n            tap(() => {\n              let tasks = this.state.flow.tasks;\n              tasks[2].status = 'success'\n              this.setState({ flow: { ...this.state.flow, tasks } })\n            }),\n  \n            // 4.\u8bf7\u6c42\u63a5\u53e3\uff0c\u8bf7\u6c42\u63a5\u53e3\u53d8\u66f4\u6bcf\u4e2a\u5b50\u5355\u7684\u6253\u5370\u72b6\u6001\n  \n            tap(() => {\n              let tasks = this.state.flow.tasks;\n              tasks[3].status = 'doing'\n              this.setState({ flow: { ...this.state.flow, tasks } })\n            }),\n  \n            mergeMap(({ ticket, template }) => {\n              return of({ ticket, template })\n                .pipe(\n                  switchMapTo(changePrintStatus({ ordernum: ticket.ordernum })),\n                  filter(res => {\n                    if (!res.code || res.code !== 200) {\n                      failTaskList.push({ ticket: ticket, failText: `\u4fee\u6539\u95e8\u7968\u6253\u5370\u72b6\u6001\u5931\u8d25\uff1a${res.msg || res}` })\n                      return false\n                    } else {\n                      return true\n                    }\n                  }),\n                  map(res => { return { ticket, template } })\n                )\n            }),\n  \n            tap(() => {\n              let tasks = this.state.flow.tasks;\n              tasks[3].status = 'success'\n              this.setState({ flow: { ...this.state.flow, tasks } })\n            }),\n  \n            // 5.\u6839\u636e\u5b50\u5355\u7968\u6570\u62c6\u5206\u51fa\u6253\u5370\u4efb\u52a1\u7684\u6570\u91cf\n  \n            tap(() => {\n              let tasks = this.state.flow.tasks;\n              tasks[4].status = 'doing'\n              this.setState({ flow: { ...this.state.flow, tasks } })\n            }),\n  \n            exhaustMap(({ ticket, template }) => {\n              if (ticket.mode === 2) {\n                let patchTickets = new Array(ticket.num).fill(null).map(() => {\n                  return { ticket: Object(ticket, { num: 1 }), template: template }\n                })\n                return from(patchTickets)\n              } else if (ticket.mode === 1) {\n                return of({ ticket, template })\n              }\n            }),\n  \n            tap(() => {\n              let tasks = this.state.flow.tasks;\n              tasks[4].status = 'success'\n              this.setState({ flow: { ...this.state.flow, tasks } })\n            }),\n  \n            // 6.\u8bf7\u6c42\u786c\u4ef6\u8bbe\u5907\u8fdb\u884c\u5355\u7968\u6253\u5370\n  \n            tap(() => {\n              let tasks = this.state.flow.tasks;\n              tasks[5].status = 'doing'\n              this.setState({ flow: { ...this.state.flow, tasks } })\n            }),\n  \n            mergeMap(({ ticket, template }) => {\n              return of({ ticket, template })\n                .pipe(\n                  switchMapTo(printTicket({ ordernum: ticket.ordernum, template })),\n                  filter(res => {\n                    if (!res.code || res.code !== 200) {\n                      failTaskList.push({ ticket: ticket, failText: `\u6253\u5370\u673a\u6253\u5370\u5931\u8d25\uff1a${res.msg || res}` })\n                      return false\n                    } else {\n                      return true\n                    }\n                  }),\n                  map(res => { return { ticket, template } })\n                )\n            }),\n  \n            tap(() => {\n              let tasks = this.state.flow.tasks;\n              tasks[5].status = 'success'\n              this.setState({ flow: { ...this.state.flow, tasks } })\n            }),\n  \n            // 7.\u4e0a\u62a5\u65e5\u5fd7\n  \n            tap(() => {\n              let tasks = this.state.flow.tasks;\n              tasks[6].status = 'doing'\n              this.setState({ flow: { ...this.state.flow, tasks } })\n            }),\n  \n            mergeMap(({ ticket, template }) => {\n              return of({ ticket, template })\n                .pipe(\n                  switchMapTo(uploadLog({ ordernum: ticket.ordernum, status: '\u4efb\u52a1\u5b8c\u6210' })),\n                  filter(res => {\n                    if (!res.code || res.code !== 200) {\n                      failTaskList.push({ ticket: ticket, failText: `\u4e0a\u62a5\u5931\u8d25\uff1a${res.msg || res}` })\n                      return false\n                    } else {\n                      return true\n                    }\n                  }),\n                  map(res => { return { ticket, template } })\n                )\n            }),\n  \n            tap(() => {\n              let tasks = this.state.flow.tasks;\n              tasks[6].status = 'success'\n              this.setState({ flow: { ...this.state.flow, tasks } })\n            }),\n  \n            catchError(err => reject(err))\n          )\n          .subscribe({\n            next(successTask) {\n              successTaskList.push(successTask)\n            },\n            complete() {\n              resolve({ successTaskList, failTaskList })\n            }\n          })\n      })\n    }\n    \n    "}]}}});
//# sourceMappingURL=49.ed5c58fe.chunk.js.map
{"version":3,"sources":["project/draggabilly/text/index.ts"],"names":["Object","defineProperty","__webpack_exports__","value","cssText","javaScriptText"],"mappings":"oDAAAA,OAAAC,eAAAC,EAAA,cAAAC,OAAA,IAsUeD,EAAA,SAAEE,QA9Ff,wxDA8FwBC,eAtUJ","file":"static/js/23.d9a6ce8f.chunk.js","sourcesContent":["const javaScriptText =`\r\nimport React from \"react\";\r\nimport style from \"./index.scss\";\r\nimport { Popover, Form, Button, Input, Slider, InputNumber, Radio } from 'antd';\r\n\r\nconst FormItem = Form.Item;\r\nconst RadioGroup = Radio.Group;\r\nconst Draggabilly = require('draggabilly');\r\n\r\nclass DraggabillyComponent extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttoolList: [\r\n\t\t\t\t{ title: '自定义文本', type: 'text', name: 'text', content: '' },\r\n\t\t\t\t{ title: '表格区域', type: 'table', name: 'table' },\r\n\t\t\t\t{ title: '二维码区域', type: 'qrcode', name: 'qrcode' },\r\n\t\t\t],\r\n\t\t\tactiveList: [],\r\n\t\t\ttoolDraggies: [],\r\n\t\t\tactiveDraggies: [],\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount () {\r\n\t\tlet that = this;\r\n\t\tlet contentDom = document.getElementById('contentContainer');\r\n\t\tdocument.querySelectorAll(\"#toolContainer [role = 'toolItem']\").forEach((item, index) => {\r\n\t\t\tlet toolItem = this.state.toolList[index];\r\n\t\t\tlet type = toolItem.type;\r\n\t\t\tlet toolDraggie = new Draggabilly(item, {})\r\n\t\t\tthis.setState({ toolDraggies: [...this.state.toolDraggies, toolDraggie] })\r\n\t\t\tlet originDelta = { y: item.offsetTop - contentDom.offsetTop, x: item.offsetLeft - contentDom.offsetLeft }\r\n\r\n\t\t\ttoolDraggie.on('dragStart', function (event, pointer) {\r\n\t\t\t\t//样式处理\r\n\t\t\t\titem.style.opacity = 0.65;\r\n\t\t\t\titem.style.zIndex = 10;\r\n\t\t\t\t//计算初始偏移\r\n\r\n\t\t\t})\r\n\r\n\t\t\ttoolDraggie.on('dragEnd', function (event, pointer) {\r\n\t\t\t\t//样式处理\r\n\t\t\t\titem.style.opacity = 1;\r\n\t\t\t\titem.style.zIndex = '';\r\n\r\n\t\t\t\tif (that.isOverlap(item, document.getElementById('contentContainer'))) {\r\n\t\t\t\t\t// 计算最终偏移的相对坐标 【最终偏移的坐标（以容器的左上角为起点），等于工具组件静止时相对原点的坐标与工具被拖动方向的矢量合】\r\n\t\t\t\t\tlet finalDelta = { x: toolDraggie.position.x, y: toolDraggie.position.y }\r\n\t\t\t\t\tlet relativePosition = {\r\n\t\t\t\t\t\tx: (finalDelta.x + originDelta.x > 0 && type != 'table') ? finalDelta.x + originDelta.x : 0,\r\n\t\t\t\t\t\ty: finalDelta.y + originDelta.y > 0 ? finalDelta.y + originDelta.y : 0,\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 生成初始数据\r\n\t\t\t\t\tlet timestamp = new Date().getTime();\r\n\t\t\t\t\tlet newActiveList = [...that.state.activeList, {\r\n\t\t\t\t\t\tid: timestamp,\r\n\t\t\t\t\t\tfont_size: 12,\r\n\t\t\t\t\t\tsize: 5,\r\n\t\t\t\t\t\tlockDirection: type == 'table' ? 'y' : 'free',\r\n\t\t\t\t\t\tx: relativePosition.x,\r\n\t\t\t\t\t\ty: relativePosition.y,\r\n\t\t\t\t\t\t...toolItem,\r\n\t\t\t\t\t}]\r\n\r\n\t\t\t\t\t//激活组件\r\n\t\t\t\t\tthat.setState({ activeList: newActiveList })\r\n\t\t\t\t\tlet activeDom = document.getElementById(timestamp);\r\n\t\t\t\t\tlet activeDraggie = new Draggabilly(activeDom, { containment: '#contentContainer' })\r\n\t\t\t\t\tthat.setState({ activeDraggies: [...that.state.activeDraggies, activeDraggie] })\r\n\t\t\t\t\tactiveDraggie.setPosition(relativePosition.x, relativePosition.y)\r\n\t\t\t\t\tlet _index = that.state.activeList.length - 1\r\n\r\n\t\t\t\t\t// 同步修改state中的位置值\r\n\t\t\t\t\tactiveDraggie.on('dragEnd', function (event, pointer) {\r\n\t\t\t\t\t\tthat.state.activeList[_index].x = activeDraggie.position.x;\r\n\t\t\t\t\t\tthat.state.activeList[_index].y = activeDraggie.position.y;\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 恢复工具控件的位置\r\n\t\t\t\ttoolDraggie.setPosition(0, 0)\r\n\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t// 卸载时取消监听\r\n\tcomponentWillUnmount () {\r\n\t\tthis.clear(this.state.activeDraggies)\r\n\t\tthis.clear(this.state.toolDraggies)\r\n\t}\r\n\r\n\t// 销毁监听\r\n\tclear (draggieList) {\r\n\t\tdraggieList.forEach(item => {\r\n\t\t\titem.destroy()\r\n\t\t})\r\n\t}\r\n\r\n\t//判断组件是否被拖入有效工作区域\r\n\tisOverlap (objOne, objTwo) {\r\n\t\tlet x1 = objOne.offsetLeft;\r\n\t\tlet y1 = objOne.offsetTop;\r\n\t\tlet x2 = x1 + objOne.offsetWidth;\r\n\t\tlet y2 = y1 + objOne.offsetHeight;\r\n\r\n\t\tlet x3 = objTwo.offsetLeft;\r\n\t\tlet y3 = objTwo.offsetTop;\r\n\t\tlet x4 = x3 + objTwo.offsetWidth;\r\n\t\tlet y4 = y3 + objTwo.offsetHeight;\r\n\r\n\t\tlet zx = Math.abs(x1 + x2 - x3 - x4);\r\n\t\tlet x = Math.abs(x1 - x2) + Math.abs(x3 - x4);\r\n\t\tlet zy = Math.abs(y1 + y2 - y3 - y4);\r\n\t\tlet y = Math.abs(y1 - y2) + Math.abs(y3 - y4);\r\n\t\treturn (zx <= x && zy <= y);\r\n\t}\r\n\r\n\r\n\t// 对组件元素进行操作的部分\r\n\tonItemValueChange (value, index, key) {\r\n\t\t//修改值\r\n\t\tthis.state.activeList[index][key] = value\r\n\t\t//触发dom更新\r\n\t\tthis.setState({\r\n\t\t\tactiveList: this.state.activeList\r\n\t\t})\r\n\t\t//需要手动变更的选项\r\n\t\tlet dom = document.getElementById(this.state.activeList[index].id);\r\n\t\tif (key == 'font_size') {\r\n\t\t\tdom.style.fontSize = value + 'px'\r\n\t\t} else if (key == 'lockDirection') {\r\n\t\t\tthis.state.activeDraggies[index].options.axis = this.state.activeList[index].lockDirection == 'free' ? '' : this.state.activeList[index].lockDirection\r\n\t\t} else if (key == 'size') {\r\n\t\t\tdom.style.width = value * 10 + 'px'\r\n\t\t\tdom.style.height = value * 10 + 'px'\r\n\t\t}\r\n\t}\r\n\r\n\t//删除组件\r\n\tdeleteItem (index) {\r\n\t\tconsole.log(index)\r\n\t\tthis.state.activeList.splice(index, 1);\r\n\t\tthis.state.activeDraggies[index].destroy();\r\n\t\tthis.state.activeDraggies.splice(index, 1);\r\n\t\tthis.setState({\r\n\t\t\tactiveList: this.state.activeList\r\n\t\t})\r\n\t}\r\n\r\n\r\n\t// 渲染编辑面板\r\n\teditToolRender (item, index) {\r\n\t\tconst formItemLayout = {\r\n\t\t\tlabelCol: {\r\n\t\t\t\txs: { span: 24 },\r\n\t\t\t\tsm: { span: 6 },\r\n\t\t\t},\r\n\t\t\twrapperCol: {\r\n\t\t\t\txs: { span: 24 },\r\n\t\t\t\tsm: { span: 16 },\r\n\t\t\t},\r\n\t\t};\r\n\t\treturn (\r\n\t\t\t<Form style={{ overflow: \"hidden\" }}>\r\n\t\t\t\t<FormItem label=\"类型\" {...formItemLayout} style={{ marginBottom: 5 }}> <Input value={item.title} placeholder='文本标题' disabled={item.type != 'text'} onChange={(e) => this.onItemValueChange.bind(this)(e.target.value, index, 'title')} /></FormItem>\r\n\t\t\t\t<FormItem label=\"内容\" {...formItemLayout} style={{ marginBottom: 5 }}> <Input value={item.content} placeholder='文本内容' disabled={item.type != 'text'} onChange={(e) => this.onItemValueChange.bind(this)(e.target.value, index, 'content')} /></FormItem>\r\n\t\t\t\t<FormItem label=\"字体大小\" {...formItemLayout} style={{ marginBottom: 5 }}> <Slider min={8} max={24} value={item.font_size} disabled={item.type != 'text'} onChange={(value) => this.onItemValueChange.bind(this)(value, index, 'font_size')}></Slider></FormItem>\r\n\t\t\t\t<FormItem label=\"尺寸\" {...formItemLayout} style={{ marginBottom: 5 }}> <Slider min={4} max={10} value={item.size} disabled={item.type != 'qrcode'} onChange={(value) => this.onItemValueChange.bind(this)(value, index, 'size')}></Slider></FormItem>\r\n\t\t\t\t<FormItem label=\"移动方向\" {...formItemLayout} style={{ marginBottom: 5 }}>\r\n\t\t\t\t\t<RadioGroup onChange={(e) => this.onItemValueChange.bind(this)(e.target.value, index, 'lockDirection')} value={item.lockDirection}>\r\n\t\t\t\t\t\t<Radio value='free' disabled={item.type == 'table'}>自由</Radio>\r\n\t\t\t\t\t\t<Radio value='x' disabled={item.type == 'table'}>水平</Radio>\r\n\t\t\t\t\t\t<Radio value='y' >垂直</Radio>\r\n\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t</FormItem>\r\n\t\t\t\t<Button style={{ float: 'right' }} type=\"danger\" onClick={(e) => this.deleteItem.bind(this)(index)}>删除</Button>\r\n\t\t\t</Form >)\r\n\t}\r\n\r\n\r\n\trender () {\r\n\r\n\t\treturn (<div className={style.container}>\r\n\t\t\t<div data-flex='main:start cross:center'>\r\n\t\t\t\t{/* 选项列表 */}\r\n\t\t\t\t<ul className={style.toolContainer} flex='dir:top main:center cross:center' id='toolContainer'>\r\n\t\t\t\t\t{this.state.toolList.map(item => {\r\n\t\t\t\t\t\treturn (<li className={style.toolItem} role='toolItem' key={item.name}>{item.title || '标题'}</li>)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t\t{/* 画布 */}\r\n\t\t\t\t<div className={style.contentContainer} id='contentContainer'>\r\n\t\t\t\t\t<ul className={style.activeList}>\r\n\t\t\t\t\t\t{this.state.activeList.map((item, index) => {\r\n\t\t\t\t\t\t\t// 这里是把手区域的渲染\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Popover\r\n\t\t\t\t\t\t\t\t\tcontent={this.editToolRender(item, index)}\r\n\t\t\t\t\t\t\t\t\ttrigger=\"click\"\r\n\t\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<li className={style[\\`\\${item.type}Item\\`]} id={item.id}>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\titem.type == 'text' ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{item.title}：</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<content>{item.content || '<-- 文本内容 -->'}</content>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t{item.type == 'table' ? <p>{'<-- 表格区域 -->'}</p> : null}\r\n\t\t\t\t\t\t\t\t\t\t{item.type == 'qrcode' ? <content></content> : null}\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t</Popover>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>)\r\n\t}\r\n}\r\n\r\n\r\nexport default DraggabillyComponent;\r\n\r\n  `\r\n\r\nconst cssText =\r\n  `:local {\r\n    .container{\r\n        background: #a27373;\r\n\t\twidth: 100%;\r\n\t\tpadding: 20px;\r\n\t}\r\n\t.contentContainer{\r\n\t\tmargin-left: 20px;\r\n\t\tbackground: #a78787;\r\n\t\twidth: 800px;\r\n\t\theight: 400px;\r\n\t\tposition: relative;\r\n\t\t.textItem{\r\n\t\t\tposition: absolute;\r\n\t\t\tleft: 0;\r\n\t\t\ttop: 0;\r\n\t\t\tdisplay: inline-block;\r\n\t\t\tbackground: #fff;\r\n\t\t\tpadding: 5px;\r\n\t\t\tmargin-bottom: 5px;\r\n\t\t\tmargin-right: 5px;\r\n\t\t\tborder: 1px solid #ddd;\r\n\t\t\tcursor: move;\r\n\t\t\tuser-select:none;\r\n\t\t\ttext-align: center;\r\n\t\t\tcontent{\r\n\t\t\t\tbackground: #ddd;\r\n\t\t\t\tpadding: 5px;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.tableItem{\r\n\t\t\tcursor: move;\r\n\t\t\twidth: 100%;\r\n\t\t\tposition: absolute;\r\n\t\t\tleft: 0;\r\n\t\t\ttop: 0;\r\n\t\t\tdisplay:block;\r\n\t\t\tpadding: 20px;\r\n\t\t\tbackground: #ddd;\r\n\t\t\ttext-align: center;\t\r\n\t\t\tp{\r\n\t\t\t\tmargin-bottom: 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.qrcodeItem{\r\n\t\t\tcursor: move;\r\n\t\t\tdisplay: inline-block;\r\n\t\t\twidth: 100%;\r\n\t\t\tposition: absolute;\r\n\t\t\tleft: 0;\r\n\t\t\ttop: 0;\r\n\t\t\tpadding: 5px;\r\n\t\t\tbackground: #fff;\r\n\t\t\twidth: 50px;\r\n\t\t\theight: 50px;\r\n\t\t\tcontent{\r\n\t\t\t\tdisplay: inline-block;\r\n\t\t\t\tbackground: #ddd;\t\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: 100%;\t\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n    .toolContainer{\r\n\t\tpadding: 10px;\r\n\t\tfloat: left;\r\n\t\tuser-select:none;\r\n\t\tbox-sizing: border-box;\r\n\t\tborder:  1px dashed #999 ;\r\n\t\tborder-bottom: none;\r\n\t\twidth: 150px;\r\n\t\tz-index: 2;\r\n\t\t.toolItem{\r\n\t\t\tdisplay: inline-block;\r\n\t\t\tbackground: #fff;\r\n\t\t\tpadding: 10px;\r\n\t\t\tmargin-bottom: 5px;\r\n\t\t\tmargin-right: 5px;\r\n\t\t\tborder: 1px solid #ddd;\r\n\t\t\tcursor: move;\r\n\t\t\tuser-select:none;\r\n\t\t\ttext-align: center;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n:global{\r\n\t.ant-popover-inner-content{\r\n\t\tmin-width: 400px;\r\n\t}\r\n}`\r\n\r\n\r\n\r\nexport default { cssText, javaScriptText }\n\n\n// WEBPACK FOOTER //\n// ./src/project/draggabilly/text/index.ts"],"sourceRoot":""}
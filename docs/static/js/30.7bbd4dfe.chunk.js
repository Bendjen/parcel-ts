webpackJsonp([30],{963:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});n.default={htmlText:'<svg\n    className={style.svgContainer}\n    viewBox="0 0 1200 240"\n    preserveAspectRatio="xMidYMid slice"\n>\n    <g strokeWidth="6" fill="#fff" stroke="#333">\n    <circle id="js-circle1" cx="400" cy="100" r="96" />\n    <circle id="js-circle2" cx="400" cy="100" r="64" stroke="none" />\n    <path id="js-connector" d="" fill="#333" />\n    </g>\n</svg>\n',javaScriptText:'//\u542f\u52a8\u90e8\u5206\uff1a\n    const circle1 = document.querySelector("#js-circle1");\n    const circle2 = document.querySelector("#js-circle2");\n    const connector = document.querySelector("#js-connector");\n    const VIEWBOX_SIZE = { W: 1200, H: 400 };\n    const SIZES = {\n      CIRCLE1: 96,\n      CIRCLE2: 64\n    };\n\n    // of\uff1a\u521b\u5efa\u4e00\u4e2a Observable\uff0c\u5b83\u4f1a\u4f9d\u6b21\u53d1\u51fa\u7531\u4f60\u63d0\u4f9b\u7684\u53c2\u6570\uff0c\u6700\u540e\u53d1\u51fa\u5b8c\u6210\u901a\u77e5\u3002\n    // do\uff1a\u62e6\u622a\u6e90 Observable \u4e0a\u7684\u6bcf\u6b21\u53d1\u9001\u5e76\u4e14\u8fd0\u884c\u4e00\u4e2a\u51fd\u6570\uff0c\u4f46\u8fd4\u56de\u7684\u8f93\u51fa Observable \u4e0e \u6e90 Observable \u662f\u76f8\u540c\u7684\u3002\n    const circle1$ = Rx.Observable.of([600, 120]).do(loc => {\n      moveTo(loc, circle1);\n    });\n\n    // interval\uff1a\u521b\u5efa\u4e00\u4e2a Observable \uff0c\u8be5 Observable \u4f7f\u7528\u6307\u5b9a\u7684 IScheduler \uff0c\u5e76\u4ee5\u6307\u5b9a\u65f6\u95f4\u95f4\u9694\u53d1\u51fa\u8fde\u7eed\u7684\u6570\u5b57\u3002\n    // map \uff1a\u8f6c\u5316\u53d1\u51fa\u7684value\n    // Rx.Scheduler.animationFrame : \u52a8\u753b\u5e27\u8c03\u5ea6\u5668\n    const circle2$ = Rx.Observable.interval(0, Rx.Scheduler.animationFrame)\n      .map(frame => 200 * Math.sin(frame / 500)) //\u5229\u7528\u4f59\u5f26\u51fd\u6570\u5f97\u5230\u53d8\u5316\u7684x\u503c\n      .map(x => [600 + x, 120])\n      .do(loc => {\n        moveTo(loc, circle2);\n      });\n\n    // combineLatest\uff1a\u7ec4\u5408\u591a\u4e2a Observables \u6765\u521b\u5efa\u4e00\u4e2a Observable \uff0c\u8be5 Observable \u7684\u503c\u6839\u636e\u6bcf\u4e2a\u8f93\u5165 Observable \u7684\u6700\u65b0\u503c\u8ba1\u7b97\u5f97\u51fa\u7684\u3002\n    Rx.Observable.combineLatest(circle1$, circle2$, (circle1Loc, circle2Loc) =>\n      metaball(SIZES.CIRCLE1, SIZES.CIRCLE2, circle1Loc, circle2Loc)\n    ).subscribe(path => {\n      connector.setAttribute("d", path);\n    });\n\n//\u6838\u5fc3\u90e8\u5206\uff1a\n    // @angleBetweenCenters : \u4e24\u5706\u5fc3\u5939\u89d2\u6781\u5750\u6807\n    // @spread : \u4e24\u5706\u5207\u70b9\u4e0e\u5927\u5706\u5706\u5fc3\u6210\u89d2\n    // @u1,u2: \u4e24\u5706\u4ea4\u70b9\u5230\u5706\u5fc3\u8fde\u7ebf\u4e0e\u4e24\u5706\u5fc3\u8fde\u7ebf\u7684\u5939\u89d2\n    // v\uff1a\u7c98\u5ea6\u7cfb\u6570\uff0c0-1\uff0c\u8d8a\u5927\u8d8a\u8d8b\u4e8e\u76f4\u7ebf\n  \n    // 1.\u5229\u7528\u4e24\u5706\u5207\u7ebf\u6c42\u51fa\u56db\u4e2a\u5207\u70b9\u7684\u6781\u5750\u6807\n    const angle1 = angleBetweenCenters + u1 + (spread - u1) * v;\n    const angle2 = angleBetweenCenters - u1 - (spread - u1) * v;\n    const angle3 =\n      angleBetweenCenters + Math.PI - u2 - (Math.PI - u2 - spread) * v;\n    const angle4 =\n      angleBetweenCenters - Math.PI + u2 + (Math.PI - u2 - spread) * v;\n    // 2.\u8f6c\u6362\u6781\u5750\u6807\u4e3a\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\n    const p1 = getVector(center1, angle1, radius1);\n    const p2 = getVector(center1, angle2, radius1);\n    const p3 = getVector(center2, angle3, radius2);\n    const p4 = getVector(center2, angle4, radius2);\n    // 3.\u5229\u7528\u56db\u4e2a\u5207\u70b9\u518d\u5bf9\u81ea\u8eab\u5706\u5750\u5207\u7ebf\uff0c\u6c42\u5f97\u56db\u4e2a\u624b\u67c4\u7684\u70b9\n    const totalRadius = radius1 + radius2;\n    const d2Base = Math.min(v * handleLenRate, dist(p1, p3) / totalRadius);\n  \n    const d2 = d2Base * Math.min(1, d * 2 / (radius1 + radius2));\n  \n    const r1 = radius1 * d2;  //\u624b\u67c4\u957f\u5ea6\n    const r2 = radius2 * d2;  //\u624b\u67c4\u957f\u5ea6\n  \n    const h1 = getVector(p1, angle1 - HALF_PI, r1);\n    const h2 = getVector(p2, angle2 + HALF_PI, r1);\n    const h3 = getVector(p3, angle3 + HALF_PI, r2);\n    const h4 = getVector(p4, angle4 - HALF_PI, r2);\n  \n    // 4.\u6839\u636e\u5207\u70b9\u5750\u6807\u3001\u624b\u67c4\u5750\u6807\u3001\u5706\u534a\u5f84\u7ed8\u5236\u51fapath\u7684\u8def\u7ebf\u7cfb\u6570\n    const path = metaballToPath(p1,p2,p3,p4,h1,h2,h3,h4,d > radius1, radius2);\n\n    return path;\n'}}});
//# sourceMappingURL=30.7bbd4dfe.chunk.js.map
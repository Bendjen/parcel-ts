{"version":3,"sources":["project/face-detection/text/index.ts"],"names":["Object","defineProperty","__webpack_exports__","value","cssText","javaScriptText"],"mappings":"qDAAAA,OAAAC,eAAAC,EAAA,cAAAC,OAAA,IAsUeD,EAAA,SAAEE,QAtUD,2wBAsUUC,eAzRH","file":"static/js/45.3473ccc2.chunk.js","sourcesContent":["const cssText = `\r\n:local{\r\n  .container{\r\n    width: 100%;\r\n    padding: 20px;\r\n    h2{\r\n      font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n      font-size: 16px;\r\n      margin: 20px;\r\n    }\r\n  }\r\n  .button{\r\n    border:2px solid #E6F7FF;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    padding: 20px 60px;\r\n    margin: 0 30px;\r\n  }\r\n  .label{\r\n    padding-top: 20px;\r\n    font-size: 14px;\r\n  }\r\n  .cameraContainer,.pictureBase64{\r\n    max-width: 600px;\r\n    max-height: 600px;\r\n  }\r\n  .rect {\r\n    border-radius: 2px;\r\n    border: 3px solid white;\r\n    // box-shadow: 0 16px 28px 0 rgba(0, 0, 0, 0.3);\r\n    cursor: pointer;\r\n    left: -1000px;\r\n    position: absolute;\r\n    top: -1000px;\r\n  }\r\n\r\n  .postScript{\r\n    margin: 40px 0;\r\n    text-align: center;\r\n  }\r\n  \r\n}\r\n`;\r\n\r\n\r\nconst javaScriptText = `\r\nimport React from \"react\";\r\nimport { Icon, message, Modal } from 'antd';\r\nimport \"antd/dist/antd.css\";\r\nimport style from \"./index.scss\";\r\nclass FaceDetection extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pictureLoading: false,\r\n      cameraLoading: false,\r\n      pictureBase64: '',\r\n      pictureFaceRect: [],\r\n      videoFaceRect: [],\r\n      cropFace: [],\r\n      pictureModalVisible: false,\r\n      cameraModalVisible: false\r\n    };\r\n    this.handlePictureClick = this.handlePictureClick.bind(this);\r\n    this.handleCameraClick = this.handleCameraClick.bind(this);\r\n    this.fileChange = this.fileChange.bind(this);\r\n    this.handlePictureCancel = this.handlePictureCancel.bind(this);\r\n    this.handlePictureOk = this.handlePictureOk.bind(this);\r\n    this.handleCameraCancel = this.handleCameraCancel.bind(this);\r\n    this.handleCameraOk = this.handleCameraOk.bind(this);\r\n    this.pictureInput = React.createRef();\r\n    this.addScript();\r\n  }\r\n\r\n  addScript() {\r\n    const scriptTracking = document.createElement(\"script\");\r\n    scriptTracking.setAttribute(\"type\", \"text/javascript\");\r\n    scriptTracking.setAttribute(\"src\", \"lib/tracking-min.js\");\r\n    const scriptFace = document.createElement(\"script\");\r\n    scriptFace.setAttribute(\"type\", \"text/javascript\");\r\n    scriptFace.setAttribute(\"src\", \"lib/face-min.js\");\r\n    const scriptWebcam = document.createElement(\"script\");\r\n    scriptWebcam.setAttribute(\"type\", \"text/javascript\");\r\n    scriptWebcam.setAttribute(\"src\", \"lib/webcam.min.js\");\r\n    document.documentElement.appendChild(scriptFace);\r\n    document.documentElement.appendChild(scriptTracking);\r\n    document.documentElement.appendChild(scriptWebcam);\r\n  }\r\n\r\n  handlePictureClick() {\r\n    if ((!tracking || !Webcam) && !this.pictureLoading) {\r\n      this.setState({ pictureLoading: true })\r\n      setTimeout(() => {\r\n        this.setState({ pictureLoading: false })\r\n      }, 5000)\r\n    } else {\r\n      this.pictureInput.current.click()\r\n    }\r\n  }\r\n\r\n  handleCameraClick() {\r\n    let that = this;\r\n    if ((!tracking || !Webcam) && !this.cameraLoading) {\r\n      this.setState({ cameraLoading: true })\r\n      setTimeout(() => {\r\n        this.setState({ cameraLoading: false })\r\n      }, 5000)\r\n    } else {\r\n      this.setState({ cameraModalVisible: true })\r\n      const hideCameraLoading = message.loading('正在连接摄像头..', 0);\r\n      setTimeout(() => {\r\n        Webcam.attach('#camera');\r\n        hideCameraLoading()\r\n        const tracker = new tracking.ObjectTracker(['face'])\r\n        // tracker.setScaleFactor(2)   // 1.1 ~ 2\r\n        // tracker.setStepSize(2)      // 1.1 ~ 2  越大，能识别的人脸特写越大\r\n        tracker.on('track', (event) => {\r\n          that.setState({ videoFaceRect: event.data })\r\n        })\r\n\r\n        function addCameraTrack() {\r\n          setTimeout(() => {\r\n            const vedio = document.querySelector('#camera video')\r\n            if (vedio) {\r\n              tracking.track('#camera video', tracker);\r\n            } else {\r\n              addCameraTrack()\r\n            }\r\n          }, 1000)\r\n        }\r\n        addCameraTrack()\r\n\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  fileChange() {\r\n    const that = this;\r\n    const reader = new FileReader();\r\n    const file = this.pictureInput.current.files[0];\r\n    if (file) {\r\n      const hideReadLoading = message.loading('读取图片..', 0);\r\n      reader.readAsDataURL(file);\r\n      reader.onload = (e) => {\r\n        hideReadLoading()\r\n        const hideDetectLoading = message.loading('正在识别人像..', 0);\r\n        this.setState({ pictureBase64: e.target.result, pictureModalVisible: true })\r\n        setTimeout(() => {\r\n          const tracker = new tracking.ObjectTracker(['face'])\r\n          // faces.setScaleFactor(2)   // 1.1 ~ 2\r\n          // faces.setStepSize(2)      // 1.1 ~ 2  越大，能识别的人脸特写越大\r\n          tracker.on('track', (event) => {\r\n            hideDetectLoading()\r\n            if (event.data.length === 0) {\r\n              message.warning('未能在该图片中识别到人脸，请避免阴影与逆光，且确保图片质量清晰。', 3);\r\n            } else {\r\n              that.setState({ pictureFaceRect: event.data })\r\n            }\r\n          })\r\n          tracking.track('#pictureBase64', tracker, { camera: true });\r\n        }, 1000)\r\n      };\r\n      reader.onerror = () => {\r\n        hideLoading()\r\n        this.setState({ pictureBase64: '' })\r\n      }\r\n    }\r\n  }\r\n\r\n  handlePictureOk() {\r\n    if (this.state.pictureFaceRect.length === 0) {\r\n      message.warning('没有可识别的人像供捕获', 3);\r\n      this.setState({ pictureModalVisible: false, pictureFaceRect: [] })\r\n    } else {\r\n      const img = document.getElementById(\"pictureBase64\");\r\n      const canvas = document.getElementById(\"mycanvas\")\r\n      const faceCtx = canvas.getContext('2d');\r\n      const imgList = [];\r\n      this.state.pictureFaceRect.forEach(rect => {\r\n        canvas.width = rect.width;\r\n        canvas.height = rect.height;\r\n        faceCtx.drawImage(img, rect.x, rect.y, rect.width, rect.height, 0, 0, rect.width, rect.height)\r\n        const faceBase64 = canvas.toDataURL(\"image/png\");\r\n        imgList.push(faceBase64)\r\n      })\r\n      this.setState({ cropFace: imgList, pictureModalVisible: false, pictureFaceRect: [] })\r\n    }\r\n    this.pictureInput.current.value = ''\r\n  }\r\n\r\n  handlePictureCancel() {\r\n    this.pictureInput.current.value = ''\r\n    this.setState({ pictureModalVisible: false, pictureFaceRect: [] })\r\n  }\r\n\r\n  handleCameraOk() {\r\n    if (this.state.videoFaceRect.length === 0) {\r\n      message.warning('没有可识别的人像供捕获', 3);\r\n      this.setState({ cameraModalVisible: false, videoFaceRect: [] })\r\n    } else {\r\n      const vedio = document.querySelector('#camera video');\r\n      const canvas = document.getElementById(\"mycanvas\")\r\n      const faceCtx = canvas.getContext('2d');\r\n      const imgList = [];\r\n      this.state.videoFaceRect.forEach(rect => {\r\n        canvas.width = rect.width;\r\n        canvas.height = rect.height;\r\n        faceCtx.drawImage(vedio, rect.x, rect.y, rect.width, rect.height, 0, 0, rect.width, rect.height)\r\n        const faceBase64 = canvas.toDataURL(\"image/png\");\r\n        imgList.push(faceBase64)\r\n      })\r\n      this.setState({ cropFace: imgList, cameraModalVisible: false, videoFaceRect: [] })\r\n    }\r\n  }\r\n\r\n  handleCameraCancel() {\r\n    this.setState({ cameraModalVisible: false, videoFaceRect: [] })\r\n    Webcam.reset()\r\n  }\r\n\r\n  renderPictureModal() {\r\n    return (\r\n      <Modal\r\n        title=\"人脸采集\"\r\n        width={800}\r\n        okText='捕获人像'\r\n        cancelText='取消'\r\n        visible={this.state.pictureModalVisible}\r\n        onOk={this.handlePictureOk}\r\n        onCancel={this.handlePictureCancel}\r\n      >\r\n        <div data-flex='main:center corss:center' id='pictureContainer'>\r\n          <img id='pictureBase64' className={style.pictureBase64} src={this.state.pictureBase64} />\r\n          {this.state.pictureFaceRect.map((rect, index) => {\r\n            const img = document.getElementById('pictureBase64')\r\n            if (img) {\r\n              return (<div className={style.rect} id={\\`rect\\${index}\\`} key={index} style={{ width: rect.width, height: rect.height, left: img.offsetLeft + rect.x, top: img.offsetTop + rect.y }}></div>)\r\n            } else {\r\n              return null\r\n            }\r\n          })}\r\n        </div>\r\n      </Modal>\r\n    )\r\n  }\r\n\r\n  renderCameraModal() {\r\n    return (\r\n      <Modal\r\n        title=\"人脸采集\"\r\n        width={800}\r\n        okText='捕获人像'\r\n        cancelText='取消'\r\n        visible={this.state.cameraModalVisible}\r\n        onOk={this.handleCameraOk}\r\n        onCancel={this.handleCameraCancel}\r\n      >\r\n        <div data-flex='main:center corss:center'>\r\n          <div id=\"camera\" style={{ width: 600, height: 600 }}></div>\r\n          {this.state.videoFaceRect.map((rect, index) => {\r\n            const video = document.querySelector('#camera video')\r\n            if (video) {\r\n              return (<div className={style.rect} id={\\`rect\\${index}\\`} key={index} style={{ width: rect.width, height: rect.height, left: video.offsetLeft + rect.x, top: video.offsetTop + rect.y }}></div>)\r\n            } else {\r\n              return null\r\n            }\r\n          })}\r\n        </div>\r\n      </Modal>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={style.container}>\r\n        {/* 人像来源 */}\r\n        <h2>选择人像来源：</h2>\r\n        <div data-flex='main:center cross:center'>\r\n          <div className={style.button} onClick={this.handlePictureClick}>\r\n            {this.state.pictureLoading ?\r\n              <div data-flex='dir:top main:center cross:center' >\r\n                <Icon type=\"loading\" style={{ fontSize: 120, color: \"#1890FF\" }} />\r\n                <span className={style.label}>资源加载中...</span>\r\n              </div>\r\n              :\r\n              <div data-flex='dir:top main:center cross:center'>\r\n                <Icon type=\"picture\" style={{ fontSize: 120 }} theme=\"twoTone\" />\r\n                <span className={style.label}>选择图片</span>\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className={style.button} onClick={this.handleCameraClick}>\r\n            {this.state.cameraLoading ?\r\n              <div data-flex='dir:top main:center cross:center' >\r\n                <Icon type=\"loading\" style={{ fontSize: 120, color: \"#1890FF\" }} />\r\n                <span className={style.label}>资源加载中...</span>\r\n              </div>\r\n              :\r\n              <div data-flex='dir:top main:center cross:center'>\r\n                <Icon type=\"camera\" style={{ fontSize: 120 }} theme=\"twoTone\" />\r\n                <span className={style.label}>现场拍摄</span>\r\n              </div>\r\n            }\r\n          </div>\r\n          <input type=\"file\" hidden accept=\"image/*\" ref={this.pictureInput} onChange={this.fileChange}></input>\r\n        </div>\r\n        <p className={style.postScript}>说明：过大的人脸特写可能导致无法识别，请选用人脸大小适中的图片。</p>\r\n        {/* 所捕获人像 */}\r\n        <h2>捕获人像：</h2>\r\n        <div data-flex='main:center cross:center' style={{ flexWrap: 'wrap' }}>\r\n          {this.state.cropFace.map((base64, index) => {\r\n            return <img style={{ margin: '0 20px' }} key={index} src={base64}></img>\r\n          })}\r\n        </div>\r\n\r\n        <canvas id=\"mycanvas\" hidden></canvas>\r\n        {this.renderPictureModal()}\r\n        {this.renderCameraModal()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FaceDetection;\r\n`;\r\n\r\nexport default { cssText, javaScriptText };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/project/face-detection/text/index.ts"],"sourceRoot":""}
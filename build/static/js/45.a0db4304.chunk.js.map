{"version":3,"sources":["project/flip-preview/text/index.ts"],"names":["Object","defineProperty","__webpack_exports__","value","cssText","javaScriptText"],"mappings":"qDAAAA,OAAAC,eAAAC,EAAA,cAAAC,OAAA,IA0LeD,EAAA,SAAEE,QA1LD,w5CA0LUC,eA9HH","file":"static/js/45.a0db4304.chunk.js","sourcesContent":["const cssText = `:local{\r\n    .blockItem{\r\n        color:#fff;\r\n        border-radius: 10px;\r\n        position: relative;\r\n        font-size: 16px;\r\n        transition: all .3s;\r\n        font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n    }\r\n    .blockItem::before{\r\n        content: ' ';\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        opacity: 0;\r\n        cursor: pointer;\r\n        border-radius: 10px;\r\n        background-color: rgba(0,0,0,0.5);\r\n        transition: all .3s;\r\n        z-index: 1\r\n    }\r\n    .blockItem:hover::before{\r\n        opacity: 1\r\n    }\r\n    .pickItem{\r\n        color:#fff;\r\n        border-radius: 10px;\r\n        position: relative;\r\n        font-size: 16px;\r\n        transition: all .3s;\r\n        font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n    }\r\n    .putPositionItem{\r\n        color:#fff;\r\n        border-radius: 10px;\r\n        position: relative;\r\n        font-size: 16px;\r\n        transform-origin: 50% 50%;\r\n        font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n    }\r\n    .transition{\r\n        transition: all .36s ease-in-out;\r\n    }\r\n    .layer{\r\n        position: fixed;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        opacity: 0;\r\n        background-color: rgba(0,0,0,0.8);\r\n        transition: all .3s ease-in-out;\r\n        z-index: 1000;\r\n    }\r\n}\r\n  `;\r\n\r\n\r\nconst javaScriptText = `\r\nimport React from \"react\"\r\nimport style from './index.scss'\r\n\r\nconst first = { left: 0, top: 0 };\r\nconst last = { left: 0, top: 0 };\r\n\r\nclass Flip extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.previewItem = this.previewItem.bind(this)\r\n    this.hideLayer = this.hideLayer.bind(this)\r\n    this.transEnd = this.transEnd.bind(this)\r\n    this.previewBlock = React.createRef()\r\n    this.state = {\r\n      pickItem: {\r\n        width: 300,\r\n        height: 300,\r\n        color: 'd3d3d3'\r\n      },\r\n      preview: false,\r\n      animation: 0,   // 0 : 关闭  0.5 ：预览开启动画 1 ：开启 -0.5 : 预览关闭动画  \r\n      blockList: new Array(5).fill(null).map(item => {\r\n        return {\r\n          width: this.getWidth(),\r\n          height: this.getHeight(),\r\n          color: this.getColor()\r\n        }\r\n      })\r\n    }\r\n  }\r\n  componentDidUpdate() {\r\n    // 如果preview已经切换到true\r\n    // 获取dom中的last位置\r\n    if (this.state.preview && this.state.animation === 0) {\r\n      const lastRect = this.previewBlock.current.getBoundingClientRect()\r\n      last.left = lastRect.left\r\n      last.top = lastRect.top\r\n      // 下一帧切换到预览开启动画\r\n      setTimeout(() => {\r\n        this.setState({ animation: 0.5 })\r\n      }, 0)\r\n    } else if (!this.state.preview && this.state.animation !== 0) {\r\n      // 如果preview已经切换到false\r\n      // dom已经消失\r\n      // 将动画状态切换回已关闭\r\n      setTimeout(() => {\r\n        this.setState({ animation: 0 })\r\n      }, 0)\r\n    }\r\n  }\r\n  transEnd() {\r\n    if (this.state.animation === 0.5) {\r\n      this.setState({ animation: 1 })\r\n    } else if (this.state.animation === -0.5) {\r\n      this.setState({ animation: 0, preview: false })\r\n    }\r\n  }\r\n  getWidth() {\r\n    return Math.round(Math.random() * 120 + 80)\r\n  }\r\n  getHeight() {\r\n    return Math.round(Math.random() * 240 + 120)\r\n  }\r\n  getColor() {\r\n    return ('00000' + (Math.random() * 0x1000001).toString(16)).substr(-6)\r\n  }\r\n  previewItem(index, e) {\r\n    if (!this.state.preview) {\r\n      const firstRect = e.target.getBoundingClientRect()\r\n      this.setState({\r\n        preview: true,\r\n        pickItem: this.state.blockList[index],\r\n      })\r\n      first.left = firstRect.left\r\n      first.top = firstRect.top\r\n      // console.log('first',first)\r\n    }\r\n  }\r\n  hideLayer() {\r\n    if (this.state.preview) {\r\n      this.setState({ animation: -0.5 });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { animation, preview, blockList, pickItem } = this.state\r\n    console.log(animation)\r\n    return (\r\n      <div style={{ overflow: 'visible' }}>\r\n        <ul data-flex=\"main:center cross:bottom\">\r\n          {blockList.map((item, index) => {\r\n            return (<li key={index} data-flex='main:center cross:center' className={style.blockItem} onClick={this.previewItem.bind(this, index)}\r\n              style={{ background: \\`#\\${item.color}\\`, width: item.width, height: item.height, }}>{item.width} X {item.height}</li>)\r\n          })}\r\n        </ul>\r\n        {preview ?\r\n          <div className={\\`/\\${style.layer} /\\${(animation === 0.5 || animation === -0.5) ? style.transition : null}\\`} data-flex='main:center cross:center' onClick={this.hideLayer}\r\n          onTransitionEnd={this.transEnd} style={{ opacity: (animation === 0.5 || animation === 1) ? 1 : 0 }}>\r\n              {/* transition 这不能选择0.5，因为0.5是从last(0)变到first(0.5)的过程,而应该选择1(dom已经处于first的位置)开始动画*/}\r\n            <div className={\\`\\${style.putPositionItem} \\${(animation === 1 || animation === -0.5) ? style.transition : null}\\`} data-flex='main:center cross:center' ref={this.previewBlock}\r\n              onTransitionEnd={this.transEnd}\r\n                //    难点在这里\r\n                //    animation === 0 的时候要translate3d(0,0,0) scale(1) 来获取last的位置信息\r\n                //    animation === 0.5 的时候这时候flip动画还没有触发，将初始位置移动到firts的位置\r\n                //    animation === 1 的开始flip动画，但是animation == 1 是由layer的animation === 0.5的transEnd触发的，所以要等layer出现后可以\r\n              style={{\r\n                background: \\`#\\${pickItem.color}\\`, width: pickItem.width, height: pickItem.height,\r\n                transform: (animation === 0.5 || animation === -0.5) ? \\`translate3d(\\${first.left - last.left}px, \\${first.top - last.top}px, 0) scale(1)\\`\r\n                  : (animation === 0 ? 'translate3d(0,0,0) scale(1)' : 'translate3d(0,0,0) scale(2)')\r\n              }}>\r\n              {pickItem.width} X {pickItem.height}</div>\r\n          </div>\r\n          : null\r\n        }\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Flip;\r\n\r\n\r\n`;\r\n\r\nexport default { cssText, javaScriptText };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/project/flip-preview/text/index.ts"],"sourceRoot":""}